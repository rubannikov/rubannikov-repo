@ngdoc overview
@name Developer Guide: Шаблоны
@description

Шаблон Angular является декларативной спецификацией, которая, наряду с информацией из модели
и контроллером, влияет на то, что пользователь видит в браузере. Это статичный DOM,
содержащий HTML, CSS, и специальные элементы и атрибуты Angular.
Элементы и атрибуты заставляют Angular добавить поведение и преобразовать DOM-шаблон в 
динамический DOM.

Следующие типы элементов и атрибутов можно использовать в шаблоне:

* {@link guide/directive Директива} — атрибут или элемент, который дополняет существующий элемент DOM или представляет собой многократно используемый компонент DOM - виджет.
* {@link api/ng.$interpolate Разметка} — двойные фигурные скобки `{{ }}` для связи выражений, встраиваемых Angular'ом в разметку элементов.
* {@link dev_guide.templates.filters Фильтр} — Форматирование данных для отображения пользователю.
* {@link forms Управляющие элементы формы} — Проверка пользовательского ввода.

Примечание: В дополнение к объявлению элементов выше в шаблонах, также можно получить доступ к этим элементам
в коде JavaScript.

В следующем фрагменте кода показан простой Angular-шаблон из стандартных HTML тегов вместе с
{@link guide/directive директивами} и привязкой {@link expression выражений} в двойных фигурных скобках:

<pre>
<html ng-app>
 <!-- Body tag augmented with ngController directive  -->
 <body ng-controller="MyController">
   <input ng-model="foo" value="bar">
   <!-- Button tag with ng-click directive, and
          string expression 'buttonText'
          wrapped in "{{ }}" markup -->
   <button ng-click="changeFoo()">{{buttonText}}</button>
   <script src="angular.js">
 </body>
</html>
</pre>


В простом одностраничном приложении, шаблон состоит из HTML, CSS, и директив, содержащихся
только в одном HTML файле (обычно `index.html`). В более сложных приложений, Вы можете отобразить несколько представлений
в пределах одной главной страницы с помощью "частичек", которые являются сегментами шаблона расположенными в отдельных HTML
файлах. Частички включаются в главную страницу с помощью сервиса {@link api/ng.$route
$route} в сочетании с директивой {@link api/ng.directive:ngView ngView}.
Пример такого способа представлен в учебнике {@link tutorial/ angular tutorial} на шаге семь и восемь.


## Связанные разделы

* {@link dev_guide.templates.filters Фильтры}
* {@link forms Формы}

## Связанное API

* {@link api/index Справочник API}
